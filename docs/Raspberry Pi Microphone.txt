Raspberry Pi Microphone

Summary: Seems like you have to define the CARD in alsa.config and the DEVICE in the function call.
    USB mic is CARD #1, DEVICE #0

sudo nano /usr/share/alsa/alsa.conf

---------------------------------------------------------------------
dmseg | grep USB ---> lead to this eventually:
[    4.543798] usb 1-1.7.6: new full-speed USB device number 6 using dwc_otg
[    4.681928] usb 1-1.7.6: New USB device found, idVendor=8086, idProduct=0808, bcdDevice= 1.00
[    4.681969] usb 1-1.7.6: New USB device strings: Mfr=1, Product=2, SerialNumber=0
[    4.681994] usb 1-1.7.6: Product: USB PnP Sound Device
[    4.682015] usb 1-1.7.6: Manufacturer: C-Media Electronics Inc.      
[    4.698421] input: C-Media Electronics Inc.       USB PnP Sound Device as /devices/platform/soc/20980000.usb/usb1/1-1/1-1.7/1-1.7.6/1-1.7.6:1.2/0003:8086:0808.0002/input/input1

---------------------------------------------------------------------
arecord -l -----> microphone's card and device number

pi@raspberrypi:~ $ arecord -l
**** List of CAPTURE Hardware Devices ****
card 2: Device [USB PnP Sound Device], device 0: USB Audio [USB Audio]
  Subdevices: 1/1
  Subdevice #0: subdevice #0

---------------------------------------------------------------------
pi@raspberrypi:~ $ arecord -L
null
    Discard all samples (playback) or generate zero samples (capture)
default:CARD=Device
    USB PnP Sound Device, USB Audio
    Default Audio Device
sysdefault:CARD=Device
    USB PnP Sound Device, USB Audio
    Default Audio Device
front:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    Front speakers
surround21:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    2.1 Surround output to Front and Subwoofer speakers
surround40:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    4.0 Surround output to Front and Rear speakers
surround41:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    4.1 Surround output to Front, Rear and Subwoofer speakers
surround50:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    5.0 Surround output to Front, Center and Rear speakers
surround51:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    5.1 Surround output to Front, Center, Rear and Subwoofer speakers
surround71:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    7.1 Surround output to Front, Center, Side, Rear and Woofer speakers
iec958:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    IEC958 (S/PDIF) Digital Audio Output
dmix:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    Direct sample mixing device
dsnoop:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    Direct sample snooping device
hw:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    Direct hardware device without any conversions
plughw:CARD=Device,DEV=0
    USB PnP Sound Device, USB Audio
    Hardware device with all software conversions

---------------------------------------------------------------------
arecord --format=S16_LE --duration=5 --rate=16000 --file-type=raw out.raw


arecord -f S16_LE -d 5 -D hw:2,0 -r 44100 nils_test.wav 





---------------------------------------------------------------------
Figure out your chipset

Start by having your Raspi turned off/shutdown (perform a clean shutdown!) and then plugging in your USB audio card. Then boot the Pi as normal.
	dmesg | grep cm109
	dmesg | grep Headphone
	dmesg | grep C
	dmesg | grep General

---------------------------------------------------------------------
List cards:  cat /proc/asound/cards
create /etc/asound.conf with following:

   defaults.pcm.card 2
   defaults.ctl.card 2

DIDN'T WORK
---------------------------------------------------------------------
--> Running this command on my RPi0w:
alsamixer  <---- THE BEST!
/proc/asound/devices:
	88: [ 2- 0 ] digital capture device

##################
##################  Ok, I think this can work as manual headless config.  Sucks for mass deploy, but so it is.
##################

---------------------------------------------------------------------
Updating ALSA Config

Raspbian Stretch - Updating alsa options
All we have to do is tell Raspbian to look at "card #1" for the default audio. Card #0 is the built in audio, so this is fairly straightforward.

Run sudo nano /usr/share/alsa/alsa.conf and look for the following two lines:
	defaults.ctl.card 0
	defaults.pcm.card 0
Change both “0” to “1” and then save the file. That’s it!

Raspbian Jessie - Updating alsa options
Earlier versions of Raspbian store sound settings in different places, with different syntax…

For Raspbian Jessie, run sudo nano /etc/asound.conf and put the following in the file and save:

 Download: fileCopy Code
pcm.!default  {
 type hw card 1
}
ctl.!default {
 type hw card 1
}
This will make the default PCM (audio) output card #1 and the default control also card #1

Raspbian Wheezy - Updating alsa options
If you're using Wheezy, we'll edit the audio system configuration file with

sudo nano /etc/modprobe.d/alsa-base.conf

For all but the most recent Raspbian Wheezy releases, look for the line that reads:

#options snd-usb-audio index=0

Change this to:

options snd-usb-audio index=0

Note we removed the # at the start of the line.

For the latest Raspbian Wheezy versions, look for this line instead:

options snd-usb-audio index=-2

There's no # to remove in this case, just change the index from -2 to 0:

options snd-usb-audio index=0
---------------------------------------------------------------------

/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
aplay -l = check speaker's card and device number
arecord -l = microphone's card and device number
vim .asoundrc

pcm.!default{
	type asym
	playback.pcm{
		type hw
		card 0
	}
	capture.pcm{
		type plug
		slave.pcm "hw:1, 0"
	}
}

ctl.!default{
	type hw
	card 0
}

Test microphone
arecord --format=S16_LE --duration=5 --rate=16000 --file-type=raw out.raw

Play it back
aplay --format=S16_LE --rate=16000 out.raw
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////


Make sure you have alsa-utils installed and raise the mic gain. E.G:
amixer -c 1 sset Mic 100%;

------------------------------

devinfo = p.get_device_info_by_index(1)  # Or whatever device you care about.
if p.is_format_supported(44100.0,  # Sample rate
                         input_device=devinfo['index'],
                         input_channels=devinfo['maxInputChannels'],
                         input_format=pyaudio.paInt16):
  print 'Yay!'

  ---------------------------------------------------------------------------------
import wave

def stereo_to_mono(hex1, hex2):
    """average two hex string samples"""
    return hex((ord(hex1) + ord(hex2))/2)

wr = wave.open('piano2.wav','r')

nchannels, sampwidth, framerate, nframes, comptype, compname =  wr.getparams()

ww = wave.open('piano_mono.wav','wb')
ww.setparams((1,sampwidth,framerate,nframes,comptype,compname))

frames = wr.readframes(wr.getnframes()-1)

new_frames = ''

for (s1, s2) in zip(frames[0::2],frames[1::2]):
    new_frames += stereo_to_mono(s1,s2)[2:].zfill(2).decode('hex')

ww.writeframes(new_frames)

------------------------------------------------------------------------------------
"Better than my answer above"
struct.unpack("<hh", b"\x00\x00\x00\x00")
# -> gives a 2-tuple of integers, here (0, 0)
